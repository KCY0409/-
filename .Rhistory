library(ggplot2)
ggplot(data = mpg) +
geom_point(aes(displ,hwy,
colour = class))
# ggplot 객체
# ggplot은 그림 그리는 정보를 가지는 layer들을 겹쳐서 차트를 그리는 방식을 이용
# 대부분은 자동으로 지정을 해주고, 필수로 작성해야 하는 layer의 요소는 데이터, 연결정보, 기하 객체 입니다.
layer = ggplot(data, aes(<mapping>)) + geom_*
# gapminder 데이터 소개
# 움직이는 버블차트로 유명한 데이터셋
if(!require("gapminer")) install.packages("gapminer")
# gapminder 데이터 소개
# 움직이는 버블차트로 유명한 데이터셋
if(!require("gapminer")){install.packages("gapminer")}
# gapminder 데이터 소개
# 움직이는 버블차트로 유명한 데이터셋
if(!require("gapminder"))install.packages("gapminder")
library(gapminder)
str(gapminder)
p <- ggplot(data = gapminder,
aes(x = gdpPercep, y = lifeExp))
p
p <- ggplot(data = gapminder,
aes(x = gdpPercap, y = lifeExp))
p
summary(p)
p_point <- p + geom_point()
p_point
summary(p_point)
summary(p)
# 실습1
# 1. gapminder에서 country가 Afghanistan인 데이터만 뽑아서 gap_af로 저장하세요
View(gapminder)
gap_af <- gapminder$country = "Afghanistan"
gap_af <- gapminder$country == "Afghanistan"
gap_af
remove(gap_af)
library(dplyr)
filter(gapminder, country = "Afghanistan")
filter(gapminder, country == "Afghanistan")
gap_af <- filter(gapminder, country == "Afghanistan")
View(gap_af)
aes(x = year, y = lifeExp)) +
geom_line()
aes(x = year, y = lifeExp)) +
geom_line(na.rm = TRUE)
# 2. gap_af를 X축은 year, y축은 lifeExp로 line 차트를 그리세요.
ggplot(data = gap_af
aes(x = year, y = lifeExp), geom_line())
aes(x = year, y = lifeExp)) + geom_line
aes(x = year, y = lifeExp)) + geom_line()
# 2. gap_af를 X축은 year, y축은 lifeExp로 line 차트를 그리세요.
ggplot(data = gap_af,
aes(x = year, y = lifeExp)) + geom_line()
# scale 변경하기
p_point
library(ggplot2)
library(gapminder)
ggplot(gapminder) +
geom_point(aes(x = log10(gdpPercep),
y = lifeExp))
ggplot(gapminder) +
geom_point(aes(x = log10(gdpPercap),
y = lifeExp))
# scale_* 함수로 변경하기
(p_point_log10 <- p_point + scale_x_log10())
